<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- Mapper 사용시 Mapper간의 구분을 위해서 name을 준다. -->
<mapper namespace="emp">


<!-- resultType 설정시 객체의 멤버변수명과 컬럼명이 같은 것을 매핑해서 넣어준다. -->
	<select id="selectAnEmp" parameterType="String" resultType="emp">
		SELECT
		EMPLOYEE_ID,
		LAST_NAME,
		JOB_ID,
		EMAIL,
		DEPARTMENT_ID,
		HIRE_DATE
		FROM EMPLOYEES
		WHERE UPPER(LAST_NAME) = UPPER(#{A})
<!-- 		#{value1} -->
	</select>
	
	
	<select id="selectAllEmp" resultType="emp">
<!-- 여기서 resultType은 객체의 맵핑만 신경쓰면 된다. Collections는 자바 소스 작성시에 설정한다. -->
		SELECT 
		*
		FROM EMPLOYEES
	</select>
	
	
	<insert id="insertEmp" parameterType="emp">
		INSERT INTO EMPLOYEES (EMPLOYEE_ID, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID, DEPARTMENT_ID)
		VALUES(#{employee_id},#{last_name},#{email}, SYSDATE,#{job_id},#{department_id})
	</insert>
	
	<update id="updateEmp" parameterType="emp">
		UPDATE EMPLOYEES
		SET
		DEPARTMENT_ID=#{department_id},
		EMAIL=#{email}
		WHERE
		EMPLOYEE_ID = #{employee_id}
	</update>
	
	<delete id="deleteEmp" parameterType="int">
		DELETE FROM EMPLOYEES WHERE
		EMPLOYEE_ID = #{employee_id}
	</delete>
	<delete id="deleteEmpHistory" parameterType="int">
		DELETE FROM JOB_HISTORY WHERE
		EMPLOYEE_ID = #{employee_id}
	</delete>
	
	

<!-- 	<resultMap type="#modelname" id="YourResultSet"> -->
<!-- 		<id property="param1" column="columnname1" /> -->
<!-- 		<result property="param2" column="columnname2" /> -->
<!-- 		<result property="param3" column="columnname3" /> -->
<!-- 	</resultMap> -->


</mapper>
